# High-Velocity Ingestion Scenario
name: high_velocity_ingestion
description: |
  Tests memory behavior under extremely high ingestion rates.
  Simulates high-throughput production environments with burst ingestion patterns.
  Monitors memory allocation efficiency and GC pressure.

dataset: openai-5m
timeout_seconds: 5400  # 90 minutes

global_config:
  n_threads: 16
  n_clients: 2000
  batch_size: 2000
  operation_timeout: 60.0

metadata:
  author: Performance Team
  version: "1.0"
  tags: [high-throughput, ingestion, performance, memory]
  requirements:
    min_memory_gb: 32
    min_cpu_cores: 16
    min_valkey_version: "7.2"

steps:
  # Phase 1: Warmup and baseline
  - name: warmup_phase
    type: workload
    workload: ingest
    description: "Warmup ingestion at moderate rate"
    parameters:
      target_vectors: 500000
    config:
      n_threads: 4
      n_clients: 500
      batch_size: 1000
      
  - name: warmup_checkpoint
    type: checkpoint
    description: "Baseline after warmup"
    parameters:
      collect_full_metrics: true
      tag: warmup_baseline
      
  # Phase 2: Burst ingestion test
  - name: burst_ingestion_1
    type: workload
    workload: ingest
    description: "High-velocity burst to 2M vectors"
    parameters:
      target_vectors: 2000000
    config:
      n_threads: 16
      n_clients: 2000
      batch_size: 5000  # Large batches for max throughput
      
  - name: burst_checkpoint_1
    type: checkpoint
    description: "Memory usage after first burst"
    parameters:
      collect_full_metrics: true
      analyze_gc_pressure: true
      tag: burst_2m
      
  # Phase 3: Sustained high-rate ingestion
  - name: sustained_high_rate
    type: workload
    workload: ingest
    description: "Sustained high-rate ingestion to 5M"
    parameters:
      target_vectors: 5000000
    config:
      n_threads: 12
      n_clients: 1500
      batch_size: 3000
      
  - name: sustained_checkpoint
    type: checkpoint
    description: "Memory patterns during sustained load"
    parameters:
      collect_full_metrics: true
      analyze_allocation_patterns: true
      tag: sustained_5m
      
  # Phase 4: Parallel ingestion with queries
  - name: parallel_ingest_query
    type: parallel
    description: "Concurrent ingestion and queries"
    steps:
      - name: background_ingestion
        type: workload
        workload: ingest
        parameters:
          target_vectors: 8000000
        config:
          n_threads: 8
          n_clients: 1000
          batch_size: 2000
          
      - name: concurrent_queries
        type: workload
        workload: query
        duration_seconds: 600
        parameters:
          query_k: 10
          queries_per_second: 300
        config:
          n_threads: 4
          n_clients: 400
          
  - name: parallel_checkpoint
    type: checkpoint
    description: "Memory usage during parallel operations"
    parameters:
      collect_full_metrics: true
      analyze_contention: true
      tag: parallel_8m
      
  # Phase 5: Maximum capacity push
  - name: maximum_velocity_push
    type: workload
    workload: ingest
    description: "Maximum velocity push to capacity"
    parameters:
      target_vectors: 15000000
    config:
      n_threads: 20
      n_clients: 3000
      batch_size: 10000  # Maximum batch size
      
  - name: max_capacity_checkpoint
    type: checkpoint
    description: "Memory at maximum capacity"
    parameters:
      collect_full_metrics: true
      analyze_memory_pressure: true
      check_oom_risk: true
      tag: max_capacity_15m
      
  # Phase 6: Recovery and stabilization
  - name: stabilization_wait
    type: wait
    description: "Allow memory to stabilize"
    parameters:
      duration_seconds: 120
      wait_for_memory_stable: true
      memory_stability_window: 60
      
  - name: light_query_load
    type: workload
    workload: query
    description: "Light query load during stabilization"
    duration_seconds: 300
    parameters:
      query_k: 5
      queries_per_second: 50
    config:
      n_threads: 2
      n_clients: 100
      
  - name: final_checkpoint
    type: checkpoint
    description: "Final memory analysis after high-velocity test"
    parameters:
      collect_full_metrics: true
      analyze_memory_efficiency: true
      generate_performance_report: true
      compare_with: warmup_baseline
      tag: final_stabilized
